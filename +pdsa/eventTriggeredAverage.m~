function [stAn, stAn_SD] = eventTriggeredAverage(an, st, win)
% calculate a triggered average
% [stAn, stAn_SD] = eventTriggeredAverage(an, ev, win)
% INPUTS
%   an [n x m] analog data (number of 

%%  Spike Triggered LFP
if ~exist('win', 'var')
    win = -500:500; % -500 ms to +500 ms
end

windowSize = numel(win);

stAn    = zeros(windowSize, size(an, 2));
stAn_SD = zeros(windowSize, size(an, 2));

st(isnan(st)) = []; % remove impossible spikes
st(st > size(an,1)) = [];

widxs = bsxfun(@plus, st, win);
widxs(widxs(:,1) <= 0,:) = []; % ignore very early spikes
widxs(widxs(:,end) > size(an,1),:) = []; % ignore very late spikes

for kCh = 1:size(an,2)
    l = an(widxs, kCh);
    l = reshape(l, [], windowSize);
    stAn(:, kCh) = mean(l);
    stAn_SD(:, kCh) = std(l); % / sqrtnsp;
end
